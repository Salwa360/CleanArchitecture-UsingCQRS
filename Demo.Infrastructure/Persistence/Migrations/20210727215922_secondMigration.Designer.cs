// <auto-generated />
using System;
using Demo.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Demo.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210727215922_secondMigration")]
    partial class secondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Demo.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("FlatNumber")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("UserId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingNumber = 1,
                            CityId = 1,
                            FlatNumber = 11,
                            Street = " Abbsia Street",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BuildingNumber = 11,
                            CityId = 2,
                            FlatNumber = 51,
                            Street = "Giza Street",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BuildingNumber = 12,
                            CityId = 1,
                            FlatNumber = 44,
                            Street = " Agoza Street",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BuildingNumber = 6,
                            CityId = 1,
                            FlatNumber = 30,
                            Street = " Nasr City Street",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            BuildingNumber = 10,
                            CityId = 2,
                            FlatNumber = 1,
                            Street = "Haram Street",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            BuildingNumber = 4,
                            CityId = 2,
                            FlatNumber = 10,
                            Street = "6 Octobar Street",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Demo.Domain.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("GovernmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GovernmentId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityName = "Helioplies",
                            GovernmentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CityName = "Obor",
                            GovernmentId = 1
                        },
                        new
                        {
                            Id = 3,
                            CityName = "Nasr City",
                            GovernmentId = 1
                        },
                        new
                        {
                            Id = 4,
                            CityName = "Tagmoaa",
                            GovernmentId = 1
                        },
                        new
                        {
                            Id = 5,
                            CityName = "Maadi",
                            GovernmentId = 1
                        },
                        new
                        {
                            Id = 6,
                            CityName = "Abassia",
                            GovernmentId = 1
                        },
                        new
                        {
                            Id = 7,
                            CityName = "Shobra",
                            GovernmentId = 1
                        },
                        new
                        {
                            Id = 8,
                            CityName = "6 Octobar",
                            GovernmentId = 2
                        },
                        new
                        {
                            Id = 9,
                            CityName = "Haram",
                            GovernmentId = 2
                        },
                        new
                        {
                            Id = 10,
                            CityName = "Fiasel",
                            GovernmentId = 2
                        },
                        new
                        {
                            Id = 11,
                            CityName = "EL shekhzaid",
                            GovernmentId = 2
                        });
                });

            modelBuilder.Entity("Demo.Domain.Entities.Government", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GovName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Government");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GovName = "Cairo"
                        },
                        new
                        {
                            Id = 2,
                            GovName = "Giza"
                        },
                        new
                        {
                            Id = 3,
                            GovName = "Alexandria"
                        },
                        new
                        {
                            Id = 4,
                            GovName = "Banha"
                        },
                        new
                        {
                            Id = 5,
                            GovName = "Domiate"
                        },
                        new
                        {
                            Id = 6,
                            GovName = "Matroh"
                        },
                        new
                        {
                            Id = 7,
                            GovName = "Sohag"
                        },
                        new
                        {
                            Id = 8,
                            GovName = "Qena"
                        });
                });

            modelBuilder.Entity("Demo.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("DATE");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1998, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Ahmed@gmail.com",
                            FirstName = "Ahmed",
                            Gender = 0,
                            LastName = "Ibrahim",
                            MiddleName = "Ali",
                            MobileNo = "01007095896"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Salma@gmail.com",
                            FirstName = "Salma",
                            Gender = 1,
                            LastName = "Ibrahim",
                            MiddleName = "Amr",
                            MobileNo = "01006958968"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1995, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Lila@gmail.com",
                            FirstName = "Lila",
                            Gender = 1,
                            LastName = "Hassan",
                            MiddleName = "Omar",
                            MobileNo = "01009085896"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1990, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "yousef@gmail.com",
                            FirstName = "yousef",
                            Gender = 0,
                            LastName = "Ibrahim",
                            MiddleName = "mohamed",
                            MobileNo = "01007096066"
                        });
                });

            modelBuilder.Entity("Demo.Domain.Entities.Address", b =>
                {
                    b.HasOne("Demo.Domain.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.Domain.Entities.User", "Users")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Demo.Domain.Entities.City", b =>
                {
                    b.HasOne("Demo.Domain.Entities.Government", "Government")
                        .WithMany("Cities")
                        .HasForeignKey("GovernmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Government");
                });

            modelBuilder.Entity("Demo.Domain.Entities.City", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Demo.Domain.Entities.Government", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Demo.Domain.Entities.User", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
